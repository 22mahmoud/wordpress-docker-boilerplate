name: Build and Deploy to Coolify

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      REPO_OWNER: ${{ github.repository_owner }}
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/node/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER }}/frontend-final:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push php-fpm
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/php-fpm/Dockerfile
          target: production
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER }}/php-production:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push nginx
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/nginx/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER }}/nginx-production:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Coolify
        run: |
          curl -X GET "${{ secrets.COOLIFY_WEBHOOK }}" \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
