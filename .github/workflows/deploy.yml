name: Build and Deploy to Coolify

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    env:
      REGISTRY: ghcr.io
      REPO_OWNER: ${{ github.repository_owner }}
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build frontend
        run: |
          docker build -f docker/node/Dockerfile -t ghcr.io/${{ github.repository_owner }}/frontend-final:latest .

      - name: Build PHP Image
        run: |
          docker build -f docker/php-fpm/Dockerfile \
            -t $REGISTRY/$REPO_OWNER/php-production:$TAG \
            -t $REGISTRY/$REPO_OWNER/php-production:latest \
            --target production .

      - name: Build Nginx Image
        run: |
          docker build -f docker/nginx/Dockerfile \
            -t $REGISTRY/$REPO_OWNER/nginx-production:$TAG \
            -t $REGISTRY/$REPO_OWNER/nginx-production:latest .

      - name: Push Images
        run: |
          docker push $REGISTRY/$REPO_OWNER/php-production:$TAG
          docker push $REGISTRY/$REPO_OWNER/php-production:latest
          docker push $REGISTRY/$REPO_OWNER/nginx-production:$TAG
          docker push $REGISTRY/$REPO_OWNER/nginx-production:latest

      - name: Deploy to Coolify
        run: |
          curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
